{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "additionalProperties": false,
  "description": "Patron notice policy",
  "properties": {
    "id": {
      "type": "string",
      "description": "Patron notice policy id, UUID"
    },
    "name": {
      "type": "string",
      "description": "Patron notice policy name"
    },
    "description": {
      "type": "string",
      "description": "Patron notice policy description"
    },
    "active": {
      "type": "boolean",
      "description": "A flag to determine if a patron notice policy is active"
    },
    "metadata": {
      "description": "Metadata about creation and changes to policy, provided by the server (client should not provide)",
      "type": "object",
      "$ref": "raml-util/schemas/metadata.schema"
    },
    "loanNotices": {
      "type": "array",
      "description": "List of loan notices",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Notice name"
          },
          "templateId": {
            "type": "string",
            "description": "Template id, UUID"
          },
          "templateName": {
            "type": "string",
            "description": "Template name"
          },
          "format": {
            "type": "string",
            "description": "Notice format, send through email, sms etc.",
            "enum": [
              "Email",
              "SMS",
              "Print"
            ]
          },
          "frequency": {
            "type": "string",
            "description": "Frequency, send it once or more",
            "enum": [
              "One time",
              "Recurring"
            ]
          },
          "realTime": {
            "type": "boolean",
            "description": "Is this real time event"
          },
          "sendOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sendHow": {
                "type": "string",
                "description": "Defines how notice should be sent, before, after or upon",
                "enum": [
                  "Upon At",
                  "Before",
                  "After"
                ]
              },
              "sendWhen": {
                "type": "string",
                "description": "Triggering event",
                "enum": [
                  "Due date",
                  "Renewed",
                  "Check in",
                  "Check out",
                  "Manual due date change",
                  "Item recalled",
                  "Aged to lost"
                ]
              },
              "sendBy": {
                "type": "object",
                "$ref": "interval.json"
              },
              "sendEvery": {
                "type": "object",
                "$ref": "interval.json"
              }
            },
            "required": [
              "sendWhen"
            ]
          }
        },
        "required": [
          "templateId",
          "format",
          "realTime"
        ]
      }
    },
    "feeFineNotices": {
      "type": "array",
      "description": "List of fee/fine notices",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Notice name"
          },
          "templateId": {
            "type": "string",
            "description": "Template id, UUID"
          },
          "templateName": {
            "type": "string",
            "description": "Template name"
          },
          "format": {
            "type": "string",
            "description": "Notice format, send through email, sms etc.",
            "enum": [
              "Email",
              "SMS",
              "Print"
            ]
          },
          "frequency": {
            "type": "string",
            "description": "Frequency, send it once or more",
            "enum": [
              "One time",
              "Recurring"
            ]
          },
          "realTime": {
            "type": "boolean",
            "description": "Is this real time event"
          },
          "sendOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sendHow": {
                "type": "string",
                "description": "Defines how notice should be sent: after or upon",
                "enum": [
                  "Upon At",
                  "After"
                ]
              },
              "sendWhen": {
                "type": "string",
                "description": "Triggering event",
                "enum": [
                  "Overdue fine returned",
                  "Overdue fine renewed",
                  "Aged to lost - fine charged",
                  "Aged to lost & item returned - fine adjusted",
                  "Aged to lost & item replaced - fine adjusted"
                ]
              },
              "sendBy": {
                "type": "object",
                "$ref": "interval.json"
              },
              "sendEvery": {
                "type": "object",
                "$ref": "interval.json"
              }
            },
            "required": [
              "sendWhen"
            ]
          }
        },
        "required": [
          "templateId",
          "format",
          "realTime"
        ]
      }
    },
    "requestNotices": {
      "type": "array",
      "description": "List of request notice",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Notice name"
          },
          "templateId": {
            "type": "string",
            "description": "Template id, UUID"
          },
          "templateName": {
            "type": "string",
            "description": "Template name"
          },
          "format": {
            "type": "string",
            "description": "Notice format, send through email, sms etc.",
            "enum": [
              "Email",
              "SMS",
              "Print"
            ]
          },
          "frequency": {
            "type": "string",
            "description": "Frequency, send it once or more",
            "enum": [
              "One time",
              "Recurring"
            ]
          },
          "realTime": {
            "type": "boolean",
            "description": "Is this real time event"
          },
          "sendOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sendHow": {
                "type": "string",
                "description": "Defines how notice should be sent, before, after or upon",
                "enum": [
                  "Upon At",
                  "Before",
                  "After"
                ]
              },
              "sendWhen": {
                "type": "string",
                "description": "User initiated and time driven events for request related notices",
                "enum": [
                  "Recall request",
                  "Hold request",
                  "Request expiration",
                  "Paging request",
                  "Available",
                  "Hold expiration",
                  "Request cancellation"
                ]
              },
              "sendBy": {
                "type": "object",
                "$ref": "interval.json"
              },
              "sendEvery": {
                "type": "object",
                "$ref": "interval.json"
              }
            },
            "required": [
              "sendWhen"
            ]
          }
        },
        "required": [
          "templateId",
          "format",
          "realTime"
        ]
      }
    }
  },
  "required": [
    "name"
  ]
}
